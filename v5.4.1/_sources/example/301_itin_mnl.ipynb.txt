{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 301: Itinerary Choice using MNL"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import larch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from larch.log.verbose import log"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This example is an itinerary choice model built using the example\n",
    "itinerary choice dataset included with Larch.  We'll begin by loading\n",
    "that example data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[2019-01-11 12:08:11,905] L4.WARNING: converting data_co to <class 'numpy.float64'>\n",
      "[2019-01-11 12:08:11,907] L4.WARNING: converting data_ce to <class 'numpy.float64'>\n",
      "[2019-01-11 12:08:11,911] L4.WARNING: rescaled array of weights by a factor of 2239.980952380952\n"
     ]
    }
   ],
   "source": [
    "from larch.examples import example\n",
    "d = example(300, 'd')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now let's make our model.  We'll use a few variables to define our\n",
    "linear-in-parameters utility function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "m = larch.Model(dataservice=d)\n",
    "\n",
    "v = [\n",
    "    \"timeperiod==2\",\n",
    "    \"timeperiod==3\",\n",
    "    \"timeperiod==4\",\n",
    "    \"timeperiod==5\",\n",
    "    \"timeperiod==6\",\n",
    "    \"timeperiod==7\",\n",
    "    \"timeperiod==8\",\n",
    "    \"timeperiod==9\",\n",
    "    \"carrier==2\",\n",
    "    \"carrier==3\",\n",
    "    \"carrier==4\",\n",
    "    \"carrier==5\",\n",
    "    \"equipment==2\",\n",
    "    \"fare_hy\",    \n",
    "    \"fare_ly\",    \n",
    "    \"elapsed_time\",  \n",
    "    \"nb_cnxs\",       \n",
    "]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `larch.roles` module defines a few convenient classes for declaring data and parameter.\n",
    "One we will use here is `PX` which creates a linear-in-parameter term that represents one data\n",
    "element (a column from our data, or an expression that can be evaluated on the data alone) multiplied\n",
    "by a parameter with the same name.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "from larch.roles import PX\n",
    "m.utility_ca = sum(PX(i) for i in v)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "m.choice_ca_var = 'choice'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since we are estimating just an MNL model in this example, this is all we need to do to build\n",
    "our model, and we're ready to go.  To estimate the likelihood maximizing parameters, we give:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[2019-01-11 12:08:12,272] L4.WARNING: req_data does not request weight_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m.load_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<h3>Iteration 011 [Converged] </h3>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<p>LL = -777770.0688722526</p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>initvalue</th>\n",
       "      <th>nullvalue</th>\n",
       "      <th>minimum</th>\n",
       "      <th>maximum</th>\n",
       "      <th>holdfast</th>\n",
       "      <th>note</th>\n",
       "      <th>best</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>carrier==2</th>\n",
       "      <td>0.117200</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.117200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>carrier==3</th>\n",
       "      <td>0.638554</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.638554</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>carrier==4</th>\n",
       "      <td>0.565252</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.565252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>carrier==5</th>\n",
       "      <td>-0.624022</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.624022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>elapsed_time</th>\n",
       "      <td>-0.006087</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.006087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>equipment==2</th>\n",
       "      <td>0.466305</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.466305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fare_hy</th>\n",
       "      <td>-0.001175</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.001175</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fare_ly</th>\n",
       "      <td>-0.001177</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.001177</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nb_cnxs</th>\n",
       "      <td>-2.947153</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-2.947153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timeperiod==2</th>\n",
       "      <td>0.095949</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.095949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timeperiod==3</th>\n",
       "      <td>0.126533</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.126533</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timeperiod==4</th>\n",
       "      <td>0.060552</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.060552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timeperiod==5</th>\n",
       "      <td>0.140963</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.140963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timeperiod==6</th>\n",
       "      <td>0.238254</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.238254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timeperiod==7</th>\n",
       "      <td>0.351391</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.351391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timeperiod==8</th>\n",
       "      <td>0.353302</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.353302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timeperiod==9</th>\n",
       "      <td>-0.010309</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.010309</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  value  initvalue  nullvalue  minimum  maximum  holdfast  \\\n",
       "carrier==2     0.117200        0.0        0.0     -inf      inf         0   \n",
       "carrier==3     0.638554        0.0        0.0     -inf      inf         0   \n",
       "carrier==4     0.565252        0.0        0.0     -inf      inf         0   \n",
       "carrier==5    -0.624022        0.0        0.0     -inf      inf         0   \n",
       "elapsed_time  -0.006087        0.0        0.0     -inf      inf         0   \n",
       "equipment==2   0.466305        0.0        0.0     -inf      inf         0   \n",
       "fare_hy       -0.001175        0.0        0.0     -inf      inf         0   \n",
       "fare_ly       -0.001177        0.0        0.0     -inf      inf         0   \n",
       "nb_cnxs       -2.947153        0.0        0.0     -inf      inf         0   \n",
       "timeperiod==2  0.095949        0.0        0.0     -inf      inf         0   \n",
       "timeperiod==3  0.126533        0.0        0.0     -inf      inf         0   \n",
       "timeperiod==4  0.060552        0.0        0.0     -inf      inf         0   \n",
       "timeperiod==5  0.140963        0.0        0.0     -inf      inf         0   \n",
       "timeperiod==6  0.238254        0.0        0.0     -inf      inf         0   \n",
       "timeperiod==7  0.351391        0.0        0.0     -inf      inf         0   \n",
       "timeperiod==8  0.353302        0.0        0.0     -inf      inf         0   \n",
       "timeperiod==9 -0.010309        0.0        0.0     -inf      inf         0   \n",
       "\n",
       "              note      best  \n",
       "carrier==2          0.117200  \n",
       "carrier==3          0.638554  \n",
       "carrier==4          0.565252  \n",
       "carrier==5         -0.624022  \n",
       "elapsed_time       -0.006087  \n",
       "equipment==2        0.466305  \n",
       "fare_hy            -0.001175  \n",
       "fare_ly            -0.001177  \n",
       "nb_cnxs            -2.947153  \n",
       "timeperiod==2       0.095949  \n",
       "timeperiod==3       0.126533  \n",
       "timeperiod==4       0.060552  \n",
       "timeperiod==5       0.140963  \n",
       "timeperiod==6       0.238254  \n",
       "timeperiod==7       0.351391  \n",
       "timeperiod==8       0.353302  \n",
       "timeperiod==9      -0.010309  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "┣          loglike: -777770.0688722526\n",
       "┣                x: carrier==2       0.117200\n",
       "┃                   carrier==3       0.638554\n",
       "┃                   carrier==4       0.565252\n",
       "┃                   carrier==5      -0.624022\n",
       "┃                   elapsed_time    -0.006087\n",
       "┃                   equipment==2     0.466305\n",
       "┃                   fare_hy         -0.001175\n",
       "┃                   fare_ly         -0.001177\n",
       "┃                   nb_cnxs         -2.947153\n",
       "┃                   timeperiod==2    0.095949\n",
       "┃                   timeperiod==3    0.126533\n",
       "┃                   timeperiod==4    0.060552\n",
       "┃                   timeperiod==5    0.140963\n",
       "┃                   timeperiod==6    0.238254\n",
       "┃                   timeperiod==7    0.351391\n",
       "┃                   timeperiod==8    0.353302\n",
       "┃                   timeperiod==9   -0.010309\n",
       "┃                   dtype: float64\n",
       "┣        tolerance: 1.3256993599095283e-06\n",
       "┣            steps: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])\n",
       "┣          message: 'Optimization terminated successfully.'\n",
       "┣     elapsed_time: datetime.timedelta(microseconds=233897)\n",
       "┣           method: 'bhhh'\n",
       "┣          n_cases: 105\n",
       "┣ iteration_number: 11\n",
       "┣          logloss: 7407.333989259549"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m.maximize_loglike()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Taiga 3.7",
   "language": "python",
   "name": "taiga37"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
