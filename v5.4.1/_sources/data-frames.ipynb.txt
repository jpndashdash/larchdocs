{
 "cells": [
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. currentmodule:: larch"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "raw_mimetype": null
   },
   "source": [
    "# DataFrames"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "A :class:`DataFrames` is essentially a collection of related :class:`pandas.DataFrame`\\ s,\n",
    "which represent :ref:`idco` and :ref:`idca` data features.\n",
    "\n",
    ".. autoclass:: DataFrames\n",
    "\n",
    "    .. automethod:: alternative_codes\n",
    "\n",
    "    .. automethod:: alternative_names\n",
    "\n",
    "    .. automethod:: set_alternative_names\n",
    "\n",
    "    **Attributes**\n",
    "\n",
    "    .. autoattribute:: data_co\n",
    "\n",
    "    .. autoattribute:: data_ca\n",
    "\n",
    "    **Read-only Attributes**\n",
    "\n",
    "    .. autoattribute:: n_alts\n",
    "\n",
    "    .. autoattribute:: n_cases\n",
    "\n",
    "    .. autoattribute:: caseindex"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Examples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import larch\n",
    "from larch.data_warehouse import example_file"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are two standard example datasets included with Larch.  The `MTC` example\n",
    "demonstrates working with data that is (originally) in `idca` format, while the\n",
    "`swissmetro` example demonstrates working with data that is in `idco` format."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### idca\n",
    "\n",
    "To start with, we'll load the `MTC` example data using pandas to create a \n",
    "normal DataFrame, although we'll identify that it will have a two-level \n",
    "MultiIndex, using the case and alt identifiers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>chose</th>\n",
       "      <th>ivtt</th>\n",
       "      <th>ovtt</th>\n",
       "      <th>tottime</th>\n",
       "      <th>totcost</th>\n",
       "      <th>hhid</th>\n",
       "      <th>perid</th>\n",
       "      <th>numalts</th>\n",
       "      <th>dist</th>\n",
       "      <th>wkzone</th>\n",
       "      <th>...</th>\n",
       "      <th>numadlt</th>\n",
       "      <th>nmlt5</th>\n",
       "      <th>nm5to11</th>\n",
       "      <th>nm12to16</th>\n",
       "      <th>wkccbd</th>\n",
       "      <th>wknccbd</th>\n",
       "      <th>corredis</th>\n",
       "      <th>vehbywrk</th>\n",
       "      <th>vocc</th>\n",
       "      <th>wgt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>casenum</th>\n",
       "      <th>altnum</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">1</th>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>13.38</td>\n",
       "      <td>2.0</td>\n",
       "      <td>15.38</td>\n",
       "      <td>70.63</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7.69</td>\n",
       "      <td>664</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>18.38</td>\n",
       "      <td>2.0</td>\n",
       "      <td>20.38</td>\n",
       "      <td>35.32</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7.69</td>\n",
       "      <td>664</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>20.38</td>\n",
       "      <td>2.0</td>\n",
       "      <td>22.38</td>\n",
       "      <td>20.18</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7.69</td>\n",
       "      <td>664</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>25.90</td>\n",
       "      <td>15.2</td>\n",
       "      <td>41.10</td>\n",
       "      <td>115.64</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7.69</td>\n",
       "      <td>664</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>40.50</td>\n",
       "      <td>2.0</td>\n",
       "      <td>42.50</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7.69</td>\n",
       "      <td>664</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">2</th>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>29.92</td>\n",
       "      <td>10.0</td>\n",
       "      <td>39.92</td>\n",
       "      <td>390.81</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11.62</td>\n",
       "      <td>738</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>34.92</td>\n",
       "      <td>10.0</td>\n",
       "      <td>44.92</td>\n",
       "      <td>195.40</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11.62</td>\n",
       "      <td>738</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>21.92</td>\n",
       "      <td>10.0</td>\n",
       "      <td>31.92</td>\n",
       "      <td>97.97</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11.62</td>\n",
       "      <td>738</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>22.96</td>\n",
       "      <td>14.2</td>\n",
       "      <td>37.16</td>\n",
       "      <td>185.00</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11.62</td>\n",
       "      <td>738</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>58.95</td>\n",
       "      <td>10.0</td>\n",
       "      <td>68.95</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11.62</td>\n",
       "      <td>738</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">3</th>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>8.60</td>\n",
       "      <td>6.0</td>\n",
       "      <td>14.60</td>\n",
       "      <td>37.76</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4.10</td>\n",
       "      <td>696</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>13.60</td>\n",
       "      <td>6.0</td>\n",
       "      <td>19.60</td>\n",
       "      <td>18.88</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4.10</td>\n",
       "      <td>696</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>15.60</td>\n",
       "      <td>6.0</td>\n",
       "      <td>21.60</td>\n",
       "      <td>10.79</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4.10</td>\n",
       "      <td>696</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>16.87</td>\n",
       "      <td>21.4</td>\n",
       "      <td>38.27</td>\n",
       "      <td>105.00</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4.10</td>\n",
       "      <td>696</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>30.60</td>\n",
       "      <td>8.5</td>\n",
       "      <td>39.10</td>\n",
       "      <td>417.32</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>14.58</td>\n",
       "      <td>665</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15 rows × 36 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                chose   ivtt  ovtt  tottime  totcost  hhid  perid  numalts  \\\n",
       "casenum altnum                                                               \n",
       "1       1           1  13.38   2.0    15.38    70.63     2      1        2   \n",
       "        2           0  18.38   2.0    20.38    35.32     2      1        2   \n",
       "        3           0  20.38   2.0    22.38    20.18     2      1        2   \n",
       "        4           0  25.90  15.2    41.10   115.64     2      1        2   \n",
       "        5           0  40.50   2.0    42.50     0.00     2      1        2   \n",
       "2       1           0  29.92  10.0    39.92   390.81     3      1        2   \n",
       "        2           0  34.92  10.0    44.92   195.40     3      1        2   \n",
       "        3           0  21.92  10.0    31.92    97.97     3      1        2   \n",
       "        4           1  22.96  14.2    37.16   185.00     3      1        2   \n",
       "        5           0  58.95  10.0    68.95     0.00     3      1        2   \n",
       "3       1           1   8.60   6.0    14.60    37.76     5      1        2   \n",
       "        2           0  13.60   6.0    19.60    18.88     5      1        2   \n",
       "        3           0  15.60   6.0    21.60    10.79     5      1        2   \n",
       "        4           0  16.87  21.4    38.27   105.00     5      1        2   \n",
       "4       1           0  30.60   8.5    39.10   417.32     6      1        2   \n",
       "\n",
       "                 dist  wkzone  ...  numadlt  nmlt5  nm5to11  nm12to16  wkccbd  \\\n",
       "casenum altnum                 ...                                              \n",
       "1       1        7.69     664  ...        1      0        0         0       0   \n",
       "        2        7.69     664  ...        1      0        0         0       0   \n",
       "        3        7.69     664  ...        1      0        0         0       0   \n",
       "        4        7.69     664  ...        1      0        0         0       0   \n",
       "        5        7.69     664  ...        1      0        0         0       0   \n",
       "2       1       11.62     738  ...        1      0        0         0       1   \n",
       "        2       11.62     738  ...        1      0        0         0       1   \n",
       "        3       11.62     738  ...        1      0        0         0       1   \n",
       "        4       11.62     738  ...        1      0        0         0       1   \n",
       "        5       11.62     738  ...        1      0        0         0       1   \n",
       "3       1        4.10     696  ...        3      2        0         0       0   \n",
       "        2        4.10     696  ...        3      2        0         0       0   \n",
       "        3        4.10     696  ...        3      2        0         0       0   \n",
       "        4        4.10     696  ...        3      2        0         0       0   \n",
       "4       1       14.58     665  ...        2      1        0         0       1   \n",
       "\n",
       "                wknccbd  corredis  vehbywrk  vocc  wgt  \n",
       "casenum altnum                                          \n",
       "1       1             0         0      4.00     1    1  \n",
       "        2             0         0      4.00     1    1  \n",
       "        3             0         0      4.00     1    1  \n",
       "        4             0         0      4.00     1    1  \n",
       "        5             0         0      4.00     1    1  \n",
       "2       1             0         1      1.00     0    1  \n",
       "        2             0         1      1.00     0    1  \n",
       "        3             0         1      1.00     0    1  \n",
       "        4             0         1      1.00     0    1  \n",
       "        5             0         1      1.00     0    1  \n",
       "3       1             1         0      0.33     1    1  \n",
       "        2             1         0      0.33     1    1  \n",
       "        3             1         0      0.33     1    1  \n",
       "        4             1         0      0.33     1    1  \n",
       "4       1             0         0      1.00     0    1  \n",
       "\n",
       "[15 rows x 36 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mtc_raw = pd.read_csv(example_file(\"MTCwork.csv.gz\"),index_col=['casenum','altnum'])\n",
    "mtc_raw.head(15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To prepare this data for use with Larch, we'll load it into a `larch.DataFrames` object."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "larch.DataFrames:  (not computation-ready)\n",
      "  n_cases: 5029\n",
      "  n_alts: 6\n",
      "  data_ce: 36 variables, 22033 rows\n",
      "  data_co: <not populated>\n",
      "  data_av: <populated>\n"
     ]
    }
   ],
   "source": [
    "mtc = larch.DataFrames(mtc_raw)\n",
    "mtc.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Because this data has a row for each available alternative, and omits rows for unavailable alternatives, Larch\n",
    "has stored it in the sparse `data_ce` attribute.  It's also used this information to populate the `data_av` attribute.\n",
    "The \"not computation-ready\" is indicating that the data stored is not all using the standard computational dtype\n",
    "(float64), so this dataframe isn't ready to use for model estimation (yet).  Larch can fix that itself later, so there's\n",
    "no need to worry.\n",
    "\n",
    "You might notice that the `data_co` says \"not populated\", we are are starting with data in `idce` (sparse `idca`) format.\n",
    "If we want to pre-process it to crack the data into seperate `idco` and `idce` parts, we can use the `crack` argument.\n",
    "This will find all the data columns that have no within-case variance, and move them to the `data_co` attribute. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "larch.DataFrames:  (not computation-ready)\n",
      "  n_cases: 5029\n",
      "  n_alts: 6\n",
      "  data_ce: 5 variables, 22033 rows\n",
      "  data_co: 31 variables\n",
      "  data_av: <populated>\n"
     ]
    }
   ],
   "source": [
    "mtc = larch.DataFrames(mtc_raw, crack=True)\n",
    "mtc.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we want, we can also identify which data is the \"choice\" at this stage.  \n",
    "(We can also leave that up to the Model object to be defined later.)\n",
    "To do so here, we can identify the data column that includes the choices."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "larch.DataFrames:  (not computation-ready)\n",
      "  n_cases: 5029\n",
      "  n_alts: 6\n",
      "  data_ce: 5 variables, 22033 rows\n",
      "  data_co: 31 variables\n",
      "  data_av: <populated>\n",
      "  data_ch: chose\n"
     ]
    }
   ],
   "source": [
    "mtc = larch.DataFrames(mtc_raw, crack=True, ch='chose')\n",
    "mtc.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### idco\n",
    "\n",
    "To contrast, we'll load the `swissmetro` example data, which is in `idco` format. \n",
    "Again we'll use pandas to start by loading a normal DataFrame."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GROUP</th>\n",
       "      <th>SURVEY</th>\n",
       "      <th>SP</th>\n",
       "      <th>ID</th>\n",
       "      <th>PURPOSE</th>\n",
       "      <th>FIRST</th>\n",
       "      <th>TICKET</th>\n",
       "      <th>WHO</th>\n",
       "      <th>LUGGAGE</th>\n",
       "      <th>AGE</th>\n",
       "      <th>...</th>\n",
       "      <th>TRAIN_TT</th>\n",
       "      <th>TRAIN_CO</th>\n",
       "      <th>TRAIN_HE</th>\n",
       "      <th>SM_TT</th>\n",
       "      <th>SM_CO</th>\n",
       "      <th>SM_HE</th>\n",
       "      <th>SM_SEATS</th>\n",
       "      <th>CAR_TT</th>\n",
       "      <th>CAR_CO</th>\n",
       "      <th>CHOICE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>112</td>\n",
       "      <td>48</td>\n",
       "      <td>120</td>\n",
       "      <td>63</td>\n",
       "      <td>52</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>117</td>\n",
       "      <td>65</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>103</td>\n",
       "      <td>48</td>\n",
       "      <td>30</td>\n",
       "      <td>60</td>\n",
       "      <td>49</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>117</td>\n",
       "      <td>84</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>130</td>\n",
       "      <td>48</td>\n",
       "      <td>60</td>\n",
       "      <td>67</td>\n",
       "      <td>58</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>117</td>\n",
       "      <td>52</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>103</td>\n",
       "      <td>40</td>\n",
       "      <td>30</td>\n",
       "      <td>63</td>\n",
       "      <td>52</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>72</td>\n",
       "      <td>52</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>130</td>\n",
       "      <td>36</td>\n",
       "      <td>60</td>\n",
       "      <td>63</td>\n",
       "      <td>42</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "      <td>84</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   GROUP  SURVEY  SP  ID  PURPOSE  FIRST  TICKET  WHO  LUGGAGE  AGE  ...  \\\n",
       "0      2       0   1   1        1      0       1    1        0    3  ...   \n",
       "1      2       0   1   1        1      0       1    1        0    3  ...   \n",
       "2      2       0   1   1        1      0       1    1        0    3  ...   \n",
       "3      2       0   1   1        1      0       1    1        0    3  ...   \n",
       "4      2       0   1   1        1      0       1    1        0    3  ...   \n",
       "\n",
       "   TRAIN_TT  TRAIN_CO  TRAIN_HE  SM_TT  SM_CO  SM_HE  SM_SEATS  CAR_TT  \\\n",
       "0       112        48       120     63     52     20         0     117   \n",
       "1       103        48        30     60     49     10         0     117   \n",
       "2       130        48        60     67     58     30         0     117   \n",
       "3       103        40        30     63     52     20         0      72   \n",
       "4       130        36        60     63     42     20         0      90   \n",
       "\n",
       "   CAR_CO  CHOICE  \n",
       "0      65       2  \n",
       "1      84       2  \n",
       "2      52       2  \n",
       "3      52       2  \n",
       "4      84       2  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw = pd.read_csv(example_file('swissmetro.csv.gz')).query(\"PURPOSE in (1,3) and CHOICE != 0\")\n",
    "raw.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can create a simple `DataFrames` object simply by giving this raw data to the constructor."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "larch.DataFrames:  (not computation-ready)\n",
      "  n_cases: 6768\n",
      "  n_alts: 0\n",
      "  data_ca: <not populated>\n",
      "  data_co: 28 variables\n"
     ]
    }
   ],
   "source": [
    "sm = larch.DataFrames(raw)\n",
    "sm.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When we loaded the `idca` example data above, Larch automatically detected the set of alternatives based on the data.\n",
    "With `idco` data, we cannot infer the alternatives without some additional context.  One way to do that is to give\n",
    "alternative id codes explicitly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "larch.DataFrames:  (not computation-ready)\n",
      "  n_cases: 6768\n",
      "  n_alts: 3\n",
      "  data_ca: <not populated>\n",
      "  data_co: 28 variables\n"
     ]
    }
   ],
   "source": [
    "sm = larch.DataFrames(raw, alt_codes=[1,2,3])\n",
    "sm.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Larch can also infer the alternative codes if we identify the column containing the choices.\n",
    "(Note this only works if every alternative is chosen at least once in the data, otherwise the\n",
    "inferred alternative codes will be incomplete.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "larch.DataFrames:  (not computation-ready)\n",
      "  n_cases: 6768\n",
      "  n_alts: 3\n",
      "  data_ca: <not populated>\n",
      "  data_co: 28 variables\n",
      "  data_ch: CHOICE\n"
     ]
    }
   ],
   "source": [
    "sm = larch.DataFrames(raw, ch=\"CHOICE\")\n",
    "sm.info()"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. |idca| replace:: :ref:`idca <idca>`\n",
    ".. |idco| replace:: :ref:`idco <idco>`"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
